
DDFStorePage.java
    //---------------------------------------------------------------------------------------------------


//This code is working
//    public void uploadBoardingPass(String filePath) {
//        System.out.println("Waiting for Upload Screenshot button...");
//
//        // Wait until the upload button is clickable
//        WebElement uploadButton = wait.until(ExpectedConditions.elementToBeClickable(boardingPassUploadButton));
//
//        try {
//            uploadButton.click();
//            System.out.println("Upload Screenshot button clicked successfully.");
//        } catch (ElementClickInterceptedException e) {
//            System.out.println("Click intercepted, using JavaScript Click.");
//            ((JavascriptExecutor) driver).executeScript("arguments[0].click();", uploadButton);
//        }
//
//        // Wait for the file input element to be present
//        System.out.println("Waiting for file input field...");
//        WebElement fileInputElement = wait.until(ExpectedConditions.presenceOfElementLocated(fileInput));
//
//        // Upload the file
//        System.out.println("Uploading file: " + filePath);
//        fileInputElement.sendKeys(BOARDING_PASS_FILE);
//        System.out.println("File uploaded successfully.");
//    }

//    public void uploadBoardingPass(String filePath) {
//        System.out.println("Waiting for Upload Screenshot button...");
//        WebElement uploadButton = wait.until(ExpectedConditions.elementToBeClickable(boardingPassUploadButton));
//
//        try {
//            uploadButton.click();
//            System.out.println("Upload Screenshot button clicked successfully.");
//        } catch (ElementClickInterceptedException e) {
//            System.out.println("Click intercepted, using JavaScript Click.");
//            ((JavascriptExecutor) driver).executeScript("arguments[0].click();", uploadButton);
//        }
//
//        // Verify file exists
//        File file = new File(filePath);
//        if (!file.exists()) {
//            throw new RuntimeException("File not found: " + filePath);
//        }
//
//        // Upload file
//        System.out.println("Uploading file: " + filePath);
//        WebElement fileInputElement = wait.until(ExpectedConditions.presenceOfElementLocated(fileInput));
//        fileInputElement.sendKeys(filePath);
//        System.out.println("File uploaded successfully.");
//    }

//    public void uploadBoardingPass(String filePath){
//        System.out.println("Waiting for Upload Screenshot button...");
//        WebElement uploadButton = wait.until(ExpectedConditions.elementToBeClickable(boardingPassUploadButton));
//
//        try {
//            uploadButton.click();
//            System.out.println("Upload Screenshot button clicked successfully.");
//        } catch (ElementClickInterceptedException e) {
//            System.out.println("Click intercepted, using JavaScript Click.");
//            ((JavascriptExecutor) driver).executeScript("arguments[0].click();", uploadButton);
//        }
//
//        // Verify file exists
//        File file = new File(filePath);
//        if (!file.exists()) {
//            throw new RuntimeException("File not found: " + filePath);
//        }
//
//        // Upload file
//        System.out.println("Uploading file: " + filePath);
//        WebElement fileInputElement = wait.until(ExpectedConditions.presenceOfElementLocated(fileInput));
//        fileInputElement.sendKeys(filePath);
//        System.out.println("File uploaded successfully.");
//
//        // ✅ Verify if the next screen appears
//        By boardingPassDetails = By.xpath("//div[contains(text(), 'Boarding Pass Details')]");
//        try {
//            wait.until(ExpectedConditions.visibilityOfElementLocated(boardingPassDetails));
//            System.out.println("✅ Boarding pass uploaded successfully, next screen loaded.");
//        } catch (TimeoutException e) {
//            System.out.println("❌ Boarding pass upload failed or next screen did not load.");
//            throw new RuntimeException("Boarding pass upload validation failed.");
//        }
//    }

//    public void uploadBoardingPass(String filePath) {
//        System.out.println("[INFO] Waiting for 'Upload Screenshot' button...");
//        WebElement uploadButton = wait.until(ExpectedConditions.elementToBeClickable(boardingPassUploadButton));
//
//        try {
//            uploadButton.click();
//            System.out.println("[SUCCESS] 'Upload Screenshot' button clicked successfully.");
//        } catch (ElementClickInterceptedException e) {
//            System.out.println("[WARNING] Click intercepted! Using JavaScript Click.");
//            ((JavascriptExecutor) driver).executeScript("arguments[0].click();", uploadButton);
//        }
//
//        // Verify file exists
//        File file = new File(filePath);
//        if (!file.exists()) {
//            System.err.println("[ERROR] File not found: " + filePath);
//            throw new RuntimeException("[ERROR] Invalid file path provided.");
//        }
//
//        // Upload file
//        System.out.println("Trying to Upload the file: " + filePath);
//        WebElement fileInputElement = wait.until(ExpectedConditions.presenceOfElementLocated(fileInput));
//        fileInputElement.sendKeys(filePath);
//        System.out.println("[SUCCESS] File uploaded successfully.");
//
//        // ✅ Verify if the next screen appears
//        try {
//            wait.until(ExpectedConditions.visibilityOfElementLocated(boardingPassDetails));
//            System.out.println("[SUCCESS] Boarding pass uploaded successfully, next screen loaded.");
//        } catch (TimeoutException e) {
//            System.err.println("[ERROR] Boarding pass upload failed! Next screen did not appear.");
//            throw new RuntimeException("[ERROR] Boarding pass upload validation failed. Please check the file format or system response.");
//        }
//    }
//
////    public void handleTransitPopup(boolean hasTransit) {
////        try {
////            // Wait for the popup to appear
////            Thread.sleep(2000); // Replace with WebDriverWait if needed
////
////            // Locate the "Yes, I have" button
////            WebElement yesButton = driver.findElement(By.xpath("//button[span[contains(text(),'Yes, I have')]]"));
////
////            // Locate the "No" button
////            WebElement noButton = driver.findElement(By.xpath("//button[span[contains(text(),'No')]]"));
////
////            if (hasTransit) {
////                System.out.println("On the transit page, do you have a transit?");
////                yesButton.click();
////                System.out.println("Clicked 'Yes, I have' on the transit popup.");
////            } else {
////                noButton.click();
////                System.out.println("Clicked 'No' on the transit popup.");
////            }
////        } catch (Exception e) {
////            System.out.println("Transit popup not found or already handled.");
////        }
////    }
//
//    public void handleTransitPopup(String option) {
//        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
//
//        // Switch to the iframe containing the pop-up
//        wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.tagName("iframe")));
//
//        // Wait for the pop-up to appear
//        wait.until(ExpectedConditions.visibilityOfElementLocated(
//                By.xpath("//p[contains(text(),'Do you have a transit in your journey?')]")));
//
//        if (option.equalsIgnoreCase("yes")) {
//            WebElement yesButton = driver.findElement(By.xpath("//button//span[text()=' Yes, I have ']"));
//            yesButton.click();
//
//            // Verify STEB message
//            WebElement stebMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(
//                    By.xpath("//p[contains(text(),'STEB Transaction required')]")));
//            System.out.println("STEB Message Displayed: " + stebMessage.isDisplayed());
//
//            // Click OK
//            WebElement okButton = driver.findElement(By.xpath("//button//span[text()='OK']"));
//            okButton.click();
//        } else {
//            WebElement noButton = driver.findElement(By.xpath("//button//span[text()=' No ']"));
//            noButton.click();
//
//            // Verify user can start shopping
//            wait.until(ExpectedConditions.urlContains("/shopping-page"));
//        }
//
//        // Switch back to the main content
//        driver.switchTo().defaultContent();
//    }


    // Updated code


    //    public void handleTransitPopup(String choice) {
    //        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
    //        JavascriptExecutor js = (JavascriptExecutor) driver;
    //
    //        try {
    //            // 1. Verify upload completion by checking the boarding pass details are visible
    //            wait.until(ExpectedConditions.visibilityOfElementLocated(
    //                    By.xpath("//div[contains(text(),'Boarding Pass Details')]")));
    //            System.out.println("[DEBUG] Boarding pass details confirmed visible");
    //
    //            // 2. Handle the popup in the main window (Angular Material dialog)
    //            WebElement transitPopup = wait.until(ExpectedConditions.visibilityOfElementLocated(
    //                    By.xpath("//div[contains(@class,'mat-dialog-container')]")));
    //            js.executeScript("arguments[0].style.border='3px solid red';", transitPopup);
    //            System.out.println("[DEBUG] Transit popup located");
    //
    //            // 3. Click the appropriate button with multiple fallbacks
    //            WebElement targetButton = null;
    //            if ("yes".equalsIgnoreCase(choice)) {
    //                targetButton = wait.until(ExpectedConditions.elementToBeClickable(
    //                        By.xpath("//button[.//span[contains(text(),'Yes, I have')]]")));
    //            } else {
    //                targetButton = wait.until(ExpectedConditions.elementToBeClickable(
    //                        By.xpath("//button[.//span[contains(text(),'No')]]")));
    //            }
    //
    //            // Triple-action click with visual feedback
    //            js.executeScript("arguments[0].style.border='3px solid blue';", targetButton);
    //            new Actions(driver)
    //                    .moveToElement(targetButton)
    //                    .pause(1000)
    //                    .click()
    //                    .perform();
    //            System.out.println("[DEBUG] Clicked " + choice + " button");
    //
    //            // 4. Handle post-click scenarios
    //            if ("yes".equalsIgnoreCase(choice)) {
    //                // Wait for STEB message
    //                WebElement stebMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(
    //                        By.xpath("//h3[contains(text(),'STEB Transaction required')]")));
    //                System.out.println("[DEBUG] STEB message displayed");
    //
    //                // Click OK button with JavaScript as fallback
    //                WebElement okButton = wait.until(ExpectedConditions.elementToBeClickable(
    //                        By.xpath("//button[.//span[contains(text(),'OK')]]")));
    //
    //                try {
    //                    okButton.click();
    //                } catch (ElementClickInterceptedException e) {
    //                    js.executeScript("arguments[0].click();", okButton);
    //                }
    //                System.out.println("[DEBUG] OK button clicked");
    //
    //                // Wait for popup to close
    //                wait.until(ExpectedConditions.invisibilityOf(stebMessage));
    //            }
    //
    //            // 5. Final verification
    //            if ("no".equalsIgnoreCase(choice)) {
    //                wait.until(ExpectedConditions.or(
    //                        ExpectedConditions.urlContains("/sg/scan"),
    //                        ExpectedConditions.presenceOfElementLocated(
    //                                By.xpath("//div[contains(@class,'item-scan-container')]"))
    //                ));
    //                System.out.println("[SUCCESS] Navigated to scan page");
    //            } else {
    //                wait.until(ExpectedConditions.or(
    //                        ExpectedConditions.invisibilityOfElementLocated(
    //                                By.xpath("//div[contains(@class,'mat-dialog-container')]")),
    //                        ExpectedConditions.presenceOfElementLocated(
    //                                By.xpath("//button[contains(text(),'Upload screenshot')]"))
    //                ));
    //                System.out.println("[SUCCESS] Returned to upload page");
    //            }
    //
    //        } catch (Exception e) {
    //            // Enhanced error diagnostics
    //            System.err.println("[FAILURE] Current URL: " + driver.getCurrentUrl());
    //            System.err.println("[FAILURE] Page source snippet:");
    //            System.err.println(driver.getPageSource().substring(0, 1000));
    //            takeScreenshot("popup_error_" + System.currentTimeMillis());
    //            throw new RuntimeException("Failed to handle transit popup: " + e.getMessage(), e);
    //        }
    //    }

    //    public void handleTransitPopup() {
    //        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));
    //        JavascriptExecutor js = (JavascriptExecutor) driver;
    //
    //        try {
    //            // 1. Locate the Angular Material dialog container
    //            WebElement dialog = wait.until(ExpectedConditions.visibilityOfElementLocated(
    //                    By.xpath("//div[contains(@class,'mat-dialog-container')]")));
    //            System.out.println("Found Material dialog popup");
    //
    //            // 2. Highlight for debugging (optional)
    //            js.executeScript("arguments[0].style.border='3px solid red'", dialog);
    //
    //            // 3. Handle the choice
    //            if ("yes".equalsIgnoreCase(choice)) {
    //                // Click "Yes, I have" button
    //                WebElement yesButton = wait.until(ExpectedConditions.elementToBeClickable(
    //                        By.xpath("//button[.//span[contains(text(),'Yes, I have')]]")));
    //
    //                // Triple-action click for reliability
    //                new Actions(driver)
    //                        .moveToElement(yesButton)
    //                        .pause(500)
    //                        .click()
    //                        .perform();
    //                System.out.println("Clicked 'Yes' button");
    //
    //                // Verify STEB message appears in the SAME dialog
    //                WebElement stebMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(
    //                        By.xpath("//h3[contains(text(),'STEB Transaction required')]")));
    //
    //                // Click OK button
    //                WebElement okButton = wait.until(ExpectedConditions.elementToBeClickable(
    //                        By.xpath(
    "//button[.//span[contains(text(),'OK')]]")));
    //                okButton.click();
    //                System.out.println("Clicked OK button");
    //
    //            } else {
    //                // Click "No" button
    //                WebElement noButton = wait.until(ExpectedConditions.elementToBeClickable(
    //                        By.xpath("//button[.//span[contains(text(),'No')]]")));
    //                noButton.click();
    //                System.out.println("Clicked 'No' button");
    //            }
    //
    //            // 4. Wait for dialog to close
    //            wait.until(ExpectedConditions.invisibilityOf(dialog));
    //            System.out.println("Dialog closed successfully");
    //
    //        } catch (Exception e) {
    //            System.err.println("Failed to handle dialog: " + e.getMessage());
    //            takeScreenshot("dialog_error");
    //            throw e;
    //        }
    //        driver.switchTo().alert().accept();
    //    }

    //    private void takeScreenshot(String filename) {
    //        try {
    //            byte[] screenshot = ((TakesScreenshot)driver).getScreenshotAs(OutputType.BYTES);
    //            Files.write(Paths.get(filename + ".png"), screenshot);
    //        } catch (Exception e) {
    //            System.err.println("Failed to capture screenshot: " + e.getMessage());
    //        }
    //    }

    //---------------------------------------------------------------------------------------------------